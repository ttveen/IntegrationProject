%% Setup
clear; clc; close all

%% Load and initialise experiment data
%load experiment data
load('..\..\Data\SID.mat');

%% create Hankel matrices

% Hankel matrix parameters
Ly = size(y,1);
Lu = size(u,1);
s = 60;
n = 7;
N = size(y,2) - 2*s + 1;

% Hankel matrices
Y0sN = zeros(Ly*s,N);
U0sN = zeros(Lu*s,N);
for i = 1:s
    for j = 1:N 
        Y0sN(Ly*(i-1)+1:Ly*i,j) = y(:,j+i-1);
        Y
        U0sN(Lu*(i-1)+1:Lu*i,j) = u(:,j+i-1);
    end
end


%% Calculate Kalman Gain
%SVD of R21*R11^-1*Zn
Zn = [U0sN; Y0sN];

%RQ factorization;

R = triu(qr([Y0SN;YSSN]'))';
R11 = R(1:L*s,1:L*s);
R21 = R(L*s+1:2*L*s,1:L*s);

% R = triu(qr([U0sN;Y0sN]'))';
% R22 = R(s*Lu+1:end, s*Lu+1:s*Lu+s*Ly);

[~,S,V] = svd(R21/R11*Y0SN);
%Plot the singular values, so that n can be determined
plot(diag(S),'ro','LineWidth',1);
set(gca,'YScale','log')
% U = U(:,1:n);
S = S(1:n,1:n);
V = V(:,1:n);

% The range space of XsN
XsN = S^(0.5)*V';

% Compute residuals W and V
W = XsN(:,2:end)-As*XsN(:,1:end-1);
V = YSSN(1:L,1:end-1)-Cs*XsN(:,1:end-1);

% Covariance of W and V
Q = 1/N*(W*W');
R = 1/N*(V*V');
S = 1/N*(W*V');
% Find the kalman gain by solving the Ricatie equation
[~,~,Ks] = dare(As',Cs',Q,R,S);
Ks=Ks';